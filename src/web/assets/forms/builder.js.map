{"version":3,"file":"builder.js","sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/builder.js","webpack:///./resources/js/helpers/h.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/js/builder.js\");\n","import h from \"./helpers/h\";\n\nclass Builder {\n\n\t// Properties\n\t// =========================================================================\n\n\t// Properties: Static\n\t// -------------------------------------------------------------------------\n\n\tstatic _uidChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\tstatic _uidCharsLength = Builder._uidChars.length;\n\n\t// Properties: Instance\n\t// -------------------------------------------------------------------------\n\n\teditingField : HTMLElement = null;\n\teditingSettings : HTMLElement = null;\n\n\t// Constructor\n\t// =========================================================================\n\n\tconstructor ({ fieldLayout, fieldSettings }) {\n\t\tthis.fieldsWrap = document.getElementById(\"formskiFields\");\n\t\tthis.formWrap = document.getElementById(\"formskiForm\");\n\t\tthis.settingsWrap = document.getElementById(\"field-settings\");\n\n\t\tthis.initFieldTemplates();\n\n\t\t// Pre-populate existing fields\n\t\tlet previousRow = this.formWrap.firstElementChild;\n\t\tlet firstField = null;\n\n\t\tfor (let [rowUid, fields] of Object.entries(fieldLayout)) {\n\t\t\t// Create the row\n\t\t\tconst row = this.createRow(this.formWrap, previousRow, rowUid);\n\n\t\t\t// Add the new H drop zone\n\t\t\tthis.formWrap.insertBefore(this.getDropZone(\"h\"), row);\n\n\t\t\t// Create the fields\n\t\t\tfor (let i = 0, l = fields.length; i < l; ++i) {\n\t\t\t\tconst fieldUid = fields[i];\n\t\t\t\tconst settings = fieldSettings[fieldUid];\n\t\t\t\tconst fieldType = settings._type;\n\t\t\t\tdelete settings._type;\n\n\t\t\t\t// Create the field\n\t\t\t\tconst field = this.createField(\n\t\t\t\t\trow,\n\t\t\t\t\tfieldType,\n\t\t\t\t\tfieldUid,\n\t\t\t\t\tsettings\n\t\t\t\t);\n\n\t\t\t\t// If is the first field\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// Replace the <!-- Field --> comment w/ the new field\n\t\t\t\t\trow.replaceChild(field, this.getRowFieldComment(row));\n\n\t\t\t\t\tif (firstField === null)\n\t\t\t\t\t\tfirstField = field;\n\t\t\t\t} else {\n\t\t\t\t\t// Add the new field & a new V drop zone\n\t\t\t\t\trow.insertBefore(field, row.lastElementChild);\n\t\t\t\t\trow.insertBefore(this.getDropZone(\"v\"), field);\n\t\t\t\t}\n\n\t\t\t\t// Update field UI based of settings\n\t\t\t\tfor (let [name, value] of Object.entries(settings)) {\n\t\t\t\t\tthis.onSettingChange(\n\t\t\t\t\t\tfield,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t{ target: name === \"required\" ? { checked: value } : { value } }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpreviousRow = row.nextElementSibling;\n\t\t}\n\n\t\t// Bind events\n\t\tthis.initDragDrop();\n\t\tthis.bindClickEvents();\n\n\t\t// Set first field as editing (if one exists)\n\t\tif (firstField) this.editField(firstField);\n\t}\n\n\t// Init\n\t// =========================================================================\n\n\t// Init: Fields\n\t// -------------------------------------------------------------------------\n\n\tinitFieldTemplates () {\n\t\tthis.rowTemplate = document.getElementById(\"formskiRow\");\n\t\tthis.dropZoneHTemplate = document.getElementById(\"formskiDropZoneH\");\n\t\tthis.dropZoneVTemplate = document.getElementById(\"formskiDropZoneV\");\n\t\tthis.fieldTemplates = {};\n\n\t\tconst fieldTemplates = document.querySelectorAll(\"[data-formski-field]\");\n\n\t\tfor (let i = 0, l = fieldTemplates.length; i < l; ++i) {\n\t\t\tconst tmpl = fieldTemplates[i];\n\t\t\tthis.fieldTemplates[tmpl.dataset.formskiField] = tmpl;\n\t\t}\n\t}\n\n\t// Init: Drag / Drop\n\t// -------------------------------------------------------------------------\n\n\tinitDragDrop () {\n\t\tconst fields = this.fieldsWrap.querySelectorAll(\"[data-type]\");\n\n\t\tfor (let i = 0, l = fields.length; i < l; ++i) {\n\t\t\tconst field = fields[i];\n\t\t\tfield.addEventListener(\n\t\t\t\t\"dragstart\",\n\t\t\t\tthis.onFieldTypeDrag.bind(this, field)\n\t\t\t);\n\t\t}\n\n\t\tthis.bindDropZones();\n\t}\n\n\t// Actions\n\t// =========================================================================\n\n\t// Actions: Add Field\n\t// -------------------------------------------------------------------------\n\n\tcreateField (row, type, uid = this.getUid(), settings = null) {\n\t\t// Get the field template & a UID\n\t\tconst field  = this.getFieldTemplate(type)\n\t\t\t, rowUid = row.dataset.rowUid;\n\n\t\t// Set the UID data\n\t\tfield.setAttribute(\"data-uid\", uid);\n\n\t\t// Add layout input\n\t\tconst layout = document.createElement(\"input\");\n\t\tlayout.setAttribute(\"type\", \"hidden\");\n\t\tlayout.setAttribute(\"name\", \"fieldLayout[][\" + rowUid + \"][]\");\n\t\tlayout.value = uid;\n\t\tfield.appendChild(layout);\n\n\t\t// Create the settings\n\t\tthis.createFieldSettings(field, type, uid, settings);\n\n\t\treturn field;\n\t}\n\n\tcreateRow (form, before, uid = this.getUid()) {\n\t\tconst row = this.getRowTemplate();\n\n\t\t// Row UID\n\t\trow.setAttribute(\"data-row-uid\", uid);\n\n\t\treturn form.insertBefore(row, before);\n\t}\n\n\taddFieldToForm (before, type) {\n\t\tconst form = before.parentNode;\n\n\t\t// Add Row\n\t\tconst row = this.createRow(form, before);\n\n\t\t// Add Field\n\t\tconst field = this.createField(row, type);\n\t\trow.replaceChild(field, this.getRowFieldComment(row));\n\n\t\t// Add new H drop zone\n\t\tform.insertBefore(this.getDropZone(\"h\"), row);\n\n\t\t// Bind new drop zones\n\t\tthis.bindDropZones();\n\n\t\t// Bind new clicks\n\t\tthis.bindClickEvents();\n\n\t\t// Edit Field\n\t\tthis.editField(field);\n\t}\n\n\taddFieldToRow (before, type) {\n\t\tconst row = before.parentNode;\n\n\t\t// Add Field\n\t\tconst field = this.createField(row, type);\n\t\trow.insertBefore(field, before);\n\n\t\t// Add new V drop zone\n\t\trow.insertBefore(this.getDropZone(\"v\"), field);\n\n\t\t// Bind new drop zones\n\t\tthis.bindDropZones();\n\n\t\t// Bind new clicks\n\t\tthis.bindClickEvents();\n\n\t\t// Edit Field\n\t\tthis.editField(field);\n\t}\n\n\t// Actions: Edit Field\n\t// -------------------------------------------------------------------------\n\n\teditField (field) {\n\t\t// Skip if already editing\n\t\tif (this.editingField === field)\n\t\t\treturn;\n\n\t\t// Add edit class to field\n\t\tif (this.editingField !== null)\n\t\t\tthis.editingField.classList.remove(\"edit\");\n\n\t\tthis.editingField = field;\n\t\tthis.editingField.classList.add(\"edit\");\n\n\t\t// Show settings\n\t\tif (this.editingSettings !== null)\n\t\t\tthis.editingSettings.classList.add(\"hidden\");\n\n\t\tthis.editingSettings =\n\t\t\tthis.settingsWrap.querySelector(\"[data-uid='\" + field.dataset.uid + \"']\");\n\t\tthis.editingSettings.classList.remove(\"hidden\");\n\t}\n\n\t// Actions: Delete Field\n\t// -------------------------------------------------------------------------\n\n\tdeleteFieldByUid (uid) {\n\t\t// Remove settings\n\t\tconst settings = this.settingsWrap.querySelector(\"[data-uid='\" + uid + \"']\");\n\t\tsettings.parentNode.removeChild(settings);\n\n\t\t// Remove field\n\t\tconst field = this.formWrap.querySelector(\"[data-uid='\" + uid + \"']\");\n\t\tconst row = field.parentNode\n\t\t\t, beingEdited = field === this.editingField;\n\n\t\tif (row.children.length === 4) {\n\t\t\t// If field is only field in row, remove the row and next drop zone\n\t\t\tconst parent = row.parentNode;\n\t\t\tconst dropZone = row.nextElementSibling;\n\t\t\tparent.removeChild(row);\n\t\t\tparent.removeChild(dropZone);\n\t\t} else {\n\t\t\t// Else remove the field and next drop zone\n\t\t\tconst dropZone = field.nextElementSibling;\n\t\t\trow.removeChild(field);\n\t\t\trow.removeChild(dropZone);\n\t\t}\n\n\t\t// If active, select another field\n\t\tif (beingEdited) {\n\t\t\tthis.editingField = null;\n\t\t\tthis.editingSettings = null;\n\n\t\t\tconst nextField = this.formWrap.querySelector(\"[data-uid]\");\n\t\t\tif (nextField) this.editField(nextField);\n\t\t}\n\t}\n\n\t// Actions: Field Settings\n\t// -------------------------------------------------------------------------\n\n\tcreateFieldSettings (uiField, type, uid, fieldSettings = null) {\n\t\tif (fieldSettings === null) {\n\t\t\tfieldSettings = {\n\t\t\t\tlabel: \"Label\",\n\t\t\t\tinstructions: \"\",\n\t\t\t\trequired: false,\n\t\t\t};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase \"text\":\n\t\t\t\t\tfieldSettings.type = \"text\";\n\t\t\t\t\tfieldSettings.placeholder = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"textarea\":\n\t\t\t\t\tfieldSettings.placeholder = \"\";\n\t\t\t\t\tfieldSettings.rows = 5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dropdown\":\n\t\t\t\tcase \"radio\":\n\t\t\t\tcase \"checkbox\":\n\t\t\t\t\tfieldSettings.options = [\n\t\t\t\t\t\t{ label: \"Label\", value: \"value\", default: false },\n\t\t\t\t\t];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.settingsWrap.appendChild(h(\"div\", {\n\t\t\tclass: \"meta hidden\",\n\t\t\t\"data-uid\": uid\n\t\t}, [\n\t\t\th(\"div\", {\n\t\t\t\tclass: \"formski-settings-type\",\n\t\t\t}, this.getFriendlyTypeName(type)),\n\n\t\t\th(\"input\", {\n\t\t\t\ttype: \"hidden\",\n\t\t\t\tname: `fieldSettings[${uid}][_type]`,\n\t\t\t\tvalue: type,\n\t\t\t}),\n\n\t\t\t...Object.entries(fieldSettings).map(([name, value]) => (\n\t\t\t\tthis.createSettingsField(uiField, uid, typeof value, name, value)\n\t\t\t)),\n\n\t\t\th(\"footer\", { class: \"footer\" }, [\n\t\t\t\th(\"button\", {\n\t\t\t\t\tclass: \"btn small\",\n\t\t\t\t\ttype: \"button\",\n\t\t\t\t\tclick: this.onDeleteFieldClick.bind(this, uid),\n\t\t\t\t}, \"Delete\")\n\t\t\t]),\n\t\t]));\n\t}\n\n\t// Events\n\t// =========================================================================\n\n\t// Events: Drag / Drop Binders\n\t// -------------------------------------------------------------------------\n\n\tbindDropZones () {\n\t\tconst dropZones = this.formWrap.querySelectorAll(\"[class*='formski-form-drop']\");\n\n\t\tfor (let i = 0, l = dropZones.length; i < l; ++i) {\n\t\t\tconst dropZone = dropZones[i];\n\n\t\t\tif (dropZone.dropBound === true)\n\t\t\t\tcontinue;\n\n\t\t\tdropZone.dropBound = true;\n\n\t\t\tconst type = ~dropZone.className.indexOf(\"-h\") ? \"h\" : \"v\";\n\n\t\t\tdropZone.addEventListener(\n\t\t\t\t\"dragover\",\n\t\t\t\tthis.onDropZoneDragOver.bind(this, dropZone)\n\t\t\t);\n\n\t\t\tdropZone.addEventListener(\n\t\t\t\t\"dragleave\",\n\t\t\t\tthis.onDropZoneDragLeave.bind(this, dropZone)\n\t\t\t);\n\n\t\t\tdropZone.addEventListener(\n\t\t\t\t\"drop\",\n\t\t\t\tthis.onDropZoneDrop.bind(this, dropZone, type)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Events: Drag / Drop Handlers\n\t// -------------------------------------------------------------------------\n\n\tonFieldTypeDrag = (field, e) => {\n\t\te.dataTransfer.setData(\"text/field\", field.dataset.type);\n\t};\n\n\tonDropZoneDragOver = (zone, e) => {\n\t\te.preventDefault();\n\n\t\tif (![...event.dataTransfer.types].includes(\"text/field\"))\n\t\t\treturn;\n\n\t\tzone.classList.add(\"drop\");\n\t};\n\n\tonDropZoneDragLeave = zone => {\n\t\tzone.classList.remove(\"drop\");\n\t};\n\n\tonDropZoneDrop = (zone, zoneType, e) => {\n\t\te.preventDefault();\n\t\tzone.classList.remove(\"drop\");\n\t\tconst type = e.dataTransfer.getData(\"text/field\");\n\n\t\tif (zoneType === \"h\") this.addFieldToForm(zone, type);\n\t\telse this.addFieldToRow(zone, type);\n\t};\n\n\t// Events: Click Binders\n\t// -------------------------------------------------------------------------\n\n\tbindClickEvents () {\n\t\tconst fields = this.formWrap.getElementsByClassName(\"formski-field\");\n\n\t\tfor (let i = 0, l = fields.length; i < l; ++i) {\n\t\t\tconst field = fields[i];\n\n\t\t\tif (field.clickBound === true)\n\t\t\t\tcontinue;\n\n\t\t\tfield.clickBound = true;\n\n\t\t\tfield.addEventListener(\"click\", this.onFieldClick.bind(this, field));\n\t\t}\n\t}\n\n\t// Events: Click Handlers\n\t// -------------------------------------------------------------------------\n\n\tonFieldClick = (field, e) => {\n\t\te.preventDefault();\n\t\tthis.editField(field);\n\t};\n\n\tonDeleteFieldClick = (uid, e) => {\n\t\te.preventDefault();\n\n\t\tif (confirm(\"Are you sure?\"))\n\t\t\tthis.deleteFieldByUid(uid);\n\t};\n\n\t// Events: Settings Handlers\n\t// -------------------------------------------------------------------------\n\n\tonSettingChange = (field, name, e) => {\n\t\tconst value = e.target.value;\n\n\t\tswitch (name) {\n\t\t\tcase \"label\":\n\t\t\t\tfield.querySelector(\".formski-field-label\").textContent = value;\n\t\t\t\tbreak;\n\t\t\tcase \"instructions\":\n\t\t\t\tfield.querySelector(\".formski-field-instructions\").textContent = value;\n\t\t\t\tbreak;\n\t\t\tcase \"type\":\n\t\t\t\tfield.querySelector(\"input\").setAttribute(\"type\", value);\n\t\t\t\tbreak;\n\t\t\tcase \"placeholder\":\n\t\t\t\tfield.querySelector(\"input,textarea\").setAttribute(\"placeholder\", value);\n\t\t\t\tbreak;\n\t\t\tcase \"rows\":\n\t\t\t\tfield.querySelector(\"textarea\").setAttribute(\"rows\", value);\n\t\t\t\tbreak;\n\t\t\tcase \"required\":\n\t\t\t\tfield.querySelector(\".formski-field-label\")\n\t\t\t\t\t .classList[e.target.checked ? \"add\" : \"remove\"](\"required\");\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// Helpers\n\t// =========================================================================\n\n\tgetRowTemplate () {\n\t\treturn document.importNode(\n\t\t\tthis.rowTemplate.content,\n\t\t\ttrue\n\t\t).firstElementChild;\n\t}\n\n\tgetFieldTemplate (type) {\n\t\treturn document.importNode(\n\t\t\tthis.fieldTemplates[type].content,\n\t\t\ttrue\n\t\t).firstElementChild;\n\t}\n\n\tgetDropZone (type) {\n\t\treturn document.importNode(\n\t\t\t(type === \"h\" ? this.dropZoneHTemplate : this.dropZoneVTemplate).content,\n\t\t\ttrue\n\t\t).firstElementChild;\n\t}\n\n\tgetUid (l = 5) {\n\t\tlet array = new Uint8Array(l);\n\t\tcrypto.getRandomValues(array);\n\t\tarray = array.map(x => Builder._uidChars.charCodeAt(x % Builder._uidCharsLength));\n\t\treturn String.fromCharCode.apply(null, array);\n\t}\n\n\tcreateSettingsField (uiField, uid, type, name, value) {\n\t\tconst labelId = \"label\" + this.getUid(10)\n\t\t\t, onSettingChange = this.onSettingChange.bind(this, uiField, name);\n\n\t\tconst inputName = `fieldSettings[${uid}][${name}]`;\n\t\tlet f;\n\n\t\tif (name === \"type\") {\n\t\t\tf = h(\"div\", { class: \"select\" }, [\n\t\t\t\th(\"select\", {\n\t\t\t\t\tname: inputName,\n\t\t\t\t\tchange: onSettingChange,\n\t\t\t\t}, [\n\t\t\t\t\th(\"option\", { value: \"text\" }, \"Text\"),\n\t\t\t\t\th(\"option\", { value: \"email\" }, \"Email\"),\n\t\t\t\t\th(\"option\", { value: \"tel\" }, \"Phone\"),\n\t\t\t\t\th(\"option\", { value: \"url\" }, \"URL\"),\n\t\t\t\t\th(\"option\", { value: \"date\" }, \"Date\"),\n\t\t\t\t\th(\"option\", { value: \"time\" }, \"Time\"),\n\t\t\t\t\th(\"option\", { value: \"datetime-local\" }, \"Date Time\"),\n\t\t\t\t]),\n\t\t\t]);\n\n\t\t\tf.firstElementChild.value = value;\n\t\t} else {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"boolean\": {\n\t\t\t\t\tf = [\n\t\t\t\t\t\th(\"input\", {\n\t\t\t\t\t\t\ttype: \"hidden\",\n\t\t\t\t\t\t\tname: inputName,\n\t\t\t\t\t\t\tvalue: \"0\",\n\t\t\t\t\t\t}),\n\t\t\t\t\t\th(\"input\", {\n\t\t\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\t\t\tname: inputName,\n\t\t\t\t\t\t\tvalue: \"1\",\n\t\t\t\t\t\t\tinput: onSettingChange,\n\t\t\t\t\t\t\tchecked: value,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"object\":\n\t\t\t\t\tf = document.createTextNode(\"TODO: Table\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: {\n\t\t\t\t\tf = h(\"input\", {\n\t\t\t\t\t\tclass: \"text fullwidth\",\n\t\t\t\t\t\ttype: type === \"number\" ? \"number\" : \"text\",\n\t\t\t\t\t\tautocomplete: \"off\",\n\t\t\t\t\t\tname: inputName,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tinput: onSettingChange,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn h(\"div\", { class: \"field\" }, [\n\t\t\th(\"div\", { class: \"heading\" }, [\n\t\t\t\th(\"label\", { id: labelId }, this.capitalize(name)),\n\t\t\t]),\n\t\t\th(\"div\", { class: \"input\" }, f)\n\t\t]);\n\t}\n\n\tgetFriendlyTypeName (type) {\n\t\tswitch (type) {\n\t\t\tcase \"radio\":\n\t\t\t\treturn \"Radio Buttons\";\n\t\t\tcase \"textarea\":\n\t\t\t\treturn \"Text Area\";\n\t\t\tcase \"checkbox\":\n\t\t\t\treturn \"Checkboxes\";\n\t\t\tdefault:\n\t\t\t\treturn this.capitalize(type);\n\t\t}\n\t}\n\n\tcapitalize (str) {\n\t\treturn str[0].toUpperCase() + str.slice(1);\n\t}\n\n\tgetRowFieldComment (row) {\n\t\treturn row.childNodes[3];\n\t}\n\n}\n\nwindow.FormskiBuilder = Builder;","/**\n * ## Create Element\n * Quick and easy DOM element creation\n *\n * @param {string=} tag - The element tag\n * @param {object=} attributes - The attributes to add, mapping the key as\n *     the attribute name, and the value as its value. If the value is a\n *     function, it will be added as an event.\n * @param {(Array|*)=} children - An array of children (can be a mixture of\n *     Nodes to append, or other values to be stringified and appended\n *     as text).\n * @return {Element} - The created element\n */\nexport default function createElement (\n\ttag = \"div\",\n\tattributes = {},\n\tchildren = []\n) {\n\tconst elem = document.createElement(tag);\n\n\tfor (let [key, value] of Object.entries(attributes)) {\n\t\tif (!value) continue;\n\n\t\tif (typeof value === typeof (() => {\n\t\t})) {\n\t\t\tif (key === \"ref\") value(elem);\n\t\t\telse elem.addEventListener(key, value);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === \"style\")\n\t\t\tvalue = value.replace(/[\\t\\r\\n]/g, \" \").trim();\n\n\t\telem.setAttribute(key, value);\n\t}\n\n\tif (!Array.isArray(children))\n\t\tchildren = [children];\n\n\tchildren.map(child => {\n\t\tif (!child) return;\n\n\t\ttry {\n\t\t\telem.appendChild(child);\n\t\t} catch (_) {\n\t\t\telem.appendChild(document.createTextNode(child));\n\t\t}\n\t});\n\n\treturn elem;\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AAKA;AACA;AAKA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAqVA;AACA;AACA;AAvVA;AAyVA;AAEA;AAGA;AACA;AACA;AAhWA;AAkWA;AACA;AACA;AApWA;AAsWA;AACA;AACA;AAEA;AAEA;AACA;AA7WA;AAoYA;AACA;AAAA;AACA;AACA;AAvYA;AAyYA;AAEA;AAEA;AACA;AA9YA;AAmZA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAnBA;AAqBA;AACA;AA1aA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAVA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA2BA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AAFA;AAKA;AADA;AAKA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAGA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAKA;AAKA;AAIA;AACA;AAGA;AACA;;;AA2BA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAGA;AACA;;;AA0CA;AACA;AAEA;AACA;AAIA;;;AAEA;AACA;AAIA;;;AAEA;AACA;AAIA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AA9BA;AAgCA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AARA;AAUA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AArjBA;AACA;AADA;AACA;AAwjBA;;;;;;;;;;;;;;;;;;;;;;;;AC3jBA;;;;;;;;;;;;;AAaA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}