{"version":3,"file":"builder.js","sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/builder.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/js/builder.js\");\n","class Builder {\n\n\t// Properties\n\t// =========================================================================\n\n\t// Properties: Static\n\t// -------------------------------------------------------------------------\n\n\tstatic _uidChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\tstatic _uidCharsLength = Builder._uidChars.length;\n\n\t// Properties: Instance\n\t// -------------------------------------------------------------------------\n\n\teditingField : HTMLElement = null;\n\teditingSettings : HTMLElement = null;\n\n\t// Constructor\n\t// =========================================================================\n\n\tconstructor () {\n\t\tthis.fieldsWrap = document.getElementById(\"formskiFields\");\n\t\tthis.formWrap = document.getElementById(\"formskiForm\");\n\t\tthis.settingsWrap = document.getElementById(\"field-settings\");\n\n\t\tthis.initFieldTemplates();\n\t\tthis.initDragDrop();\n\t\tthis.bindClickEvents();\n\t}\n\n\t// Init\n\t// =========================================================================\n\n\t// Init: Fields\n\t// -------------------------------------------------------------------------\n\n\tinitFieldTemplates () {\n\t\tthis.rowTemplate = document.getElementById(\"formskiRow\");\n\t\tthis.dropZoneHTemplate = document.getElementById(\"formskiDropZoneH\");\n\t\tthis.dropZoneVTemplate = document.getElementById(\"formskiDropZoneV\");\n\t\tthis.fieldTemplates = {};\n\n\t\tconst fieldTemplates = document.querySelectorAll(\"[data-formski-field]\");\n\n\t\tfor (let i = 0, l = fieldTemplates.length; i < l; ++i) {\n\t\t\tconst tmpl = fieldTemplates[i];\n\t\t\tthis.fieldTemplates[tmpl.dataset.formskiField] = tmpl;\n\t\t}\n\t}\n\n\t// Init: Drag / Drop\n\t// -------------------------------------------------------------------------\n\n\tinitDragDrop () {\n\t\tconst fields = this.fieldsWrap.querySelectorAll(\"[data-type]\");\n\n\t\tfor (let i = 0, l = fields.length; i < l; ++i) {\n\t\t\tconst field = fields[i];\n\t\t\tfield.addEventListener(\n\t\t\t\t\"dragstart\",\n\t\t\t\tthis.onFieldTypeDrag.bind(this, field)\n\t\t\t);\n\t\t}\n\n\t\tthis.bindDropZones();\n\t}\n\n\t// Actions\n\t// =========================================================================\n\n\t// Actions: Add Field\n\t// -------------------------------------------------------------------------\n\n\tcreateField (row, type) {\n\t\t// Get the field template & a UID\n\t\tconst field  = this.getFieldTemplate(type)\n\t\t\t, rowUid = row.dataset.rowUid\n\t\t\t, uid    = this.getUid();\n\n\t\t// Set the UID data\n\t\tfield.setAttribute(\"data-uid\", uid);\n\n\t\t// Add layout input\n\t\tconst layout = document.createElement(\"input\");\n\t\tlayout.setAttribute(\"type\", \"hidden\");\n\t\tlayout.setAttribute(\"name\", \"fieldLayout[\" + rowUid + \"][]\");\n\t\tlayout.value = uid;\n\t\tfield.appendChild(layout);\n\n\t\t// Create the settings\n\t\tthis.createFieldSettings(type, uid);\n\n\t\treturn field;\n\t}\n\n\tcreateRow (form, before) {\n\t\tconst row = this.getRowTemplate()\n\t\t\t, uid = this.getUid();\n\n\t\t// Row UID\n\t\trow.setAttribute(\"data-row-uid\", uid);\n\n\t\t// Row layout input\n\t\tconst layout = document.createElement(\"input\");\n\t\tlayout.setAttribute(\"type\", \"hidden\");\n\t\tlayout.setAttribute(\"name\", \"rowLayout[]\");\n\t\tlayout.value = uid;\n\t\trow.appendChild(layout);\n\n\t\treturn form.insertBefore(row, before);\n\t}\n\n\taddFieldToForm (before, type) {\n\t\tconst form = before.parentNode;\n\n\t\t// Add Row\n\t\tconst row = this.createRow(form, before);\n\n\t\t// Add Field\n\t\tconst field = this.createField(row, type);\n\t\trow.replaceChild(field, row.childNodes[3]);\n\n\t\t// Add new H drop zone\n\t\tform.insertBefore(this.getDropZone(\"h\"), row);\n\n\t\t// Bind new drop zones\n\t\tthis.bindDropZones();\n\n\t\t// Bind new clicks\n\t\tthis.bindClickEvents();\n\n\t\t// Edit Field\n\t\tthis.editField(field);\n\t}\n\n\taddFieldToRow (before, type) {\n\t\tconst row = before.parentNode;\n\n\t\t// Add Field\n\t\tconst field = this.createField(row, type);\n\t\trow.insertBefore(field, before);\n\n\t\t// Add new V drop zone\n\t\trow.insertBefore(this.getDropZone(\"v\"), field);\n\n\t\t// Bind new drop zones\n\t\tthis.bindDropZones();\n\n\t\t// Bind new clicks\n\t\tthis.bindClickEvents();\n\n\t\t// Edit Field\n\t\tthis.editField(field);\n\t}\n\n\t// Actions: Edit Field\n\t// -------------------------------------------------------------------------\n\n\teditField (field) {\n\t\t// Skip if already editing\n\t\tif (this.editingField === field)\n\t\t\treturn;\n\n\t\t// Add edit class to field\n\t\tif (this.editingField !== null)\n\t\t\tthis.editingField.classList.remove(\"edit\");\n\n\t\tthis.editingField = field;\n\t\tthis.editingField.classList.add(\"edit\");\n\n\t\t// Show settings\n\t\tif (this.editingSettings !== null)\n\t\t\tthis.editingSettings.classList.add(\"hidden\");\n\n\t\tthis.editingSettings =\n\t\t\tthis.settingsWrap.querySelector(\"[data-uid='\" + field.dataset.uid + \"']\");\n\t\tthis.editingSettings.classList.remove(\"hidden\");\n\t}\n\n\t// Actions: Delete Field\n\t// -------------------------------------------------------------------------\n\n\tdeleteFieldByUid (uid) {\n\t\t// Remove settings\n\t\tconst settings = this.settingsWrap.querySelector(\"[data-uid='\" + uid + \"']\");\n\t\tsettings.parentNode.removeChild(settings);\n\n\t\t// Remove field\n\t\tconst field = this.formWrap.querySelector(\"[data-uid='\" + uid + \"']\");\n\t\tconst row = field.parentNode\n\t\t\t, beingEdited = field === this.editingField;\n\n\t\tif (row.children.length === 4) {\n\t\t\t// If field is only field in row, remove the row and next drop zone\n\t\t\tconst parent = row.parentNode;\n\t\t\tconst dropZone = row.nextElementSibling;\n\t\t\tparent.removeChild(row);\n\t\t\tparent.removeChild(dropZone);\n\t\t} else {\n\t\t\t// Else remove the field and next drop zone\n\t\t\tconst dropZone = field.nextElementSibling;\n\t\t\trow.removeChild(field);\n\t\t\trow.removeChild(dropZone);\n\t\t}\n\n\t\t// If active, select another field\n\t\tif (beingEdited) {\n\t\t\tthis.editingField = null;\n\t\t\tthis.editingSettings = null;\n\n\t\t\tconst nextField = this.formWrap.querySelector(\"[data-uid]\");\n\t\t\tif (nextField) this.editField(nextField);\n\t\t}\n\t}\n\n\t// Actions: Field Settings\n\t// -------------------------------------------------------------------------\n\n\tcreateFieldSettings (type, uid) {\n\t\tconst fieldSettings = {\n\t\t\thandle: \"\",\n\t\t\tlabel: \"Label\",\n\t\t\tinstructions: \"\",\n\t\t\trequired: false,\n\t\t};\n\n\t\tswitch (type) {\n\t\t\tcase \"text\":\n\t\t\t\tfieldSettings.type = \"text\";\n\t\t\t\tfieldSettings.placeholder = \"\";\n\t\t\t\tbreak;\n\t\t\tcase \"textarea\":\n\t\t\t\tfieldSettings.type = \"text\";\n\t\t\t\tfieldSettings.placeholder = \"\";\n\t\t\t\tfieldSettings.rows = 5;\n\t\t\t\tbreak;\n\t\t\tcase \"dropdown\":\n\t\t\tcase \"radio\":\n\t\t\tcase \"checkbox\":\n\t\t\t\tfieldSettings.options = [\n\t\t\t\t\t{ label: \"Label\", value: \"value\", default: false },\n\t\t\t\t];\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Settings wrapping div\n\t\tconst settingsDiv = document.createElement(\"div\");\n\t\tsettingsDiv.setAttribute(\"data-uid\", uid);\n\t\tsettingsDiv.className = \"meta hidden\";\n\t\tthis.settingsWrap.appendChild(settingsDiv);\n\n\t\t// Field Type\n\t\tconst fieldType = document.createElement(\"div\");\n\t\tfieldType.classList.add(\"formski-settings-type\");\n\t\tfieldType.textContent = this.getFriendlyTypeName(type);\n\t\tsettingsDiv.appendChild(fieldType);\n\n\t\t// Field Type input\n\t\tconst typeInput = document.createElement(\"input\");\n\t\ttypeInput.setAttribute(\"type\", \"hidden\");\n\t\ttypeInput.setAttribute(\"name\", `fieldSettings[${uid}][_type]`);\n\t\ttypeInput.value = type;\n\t\tsettingsDiv.appendChild(typeInput);\n\n\t\t// Settings Fields\n\t\tfor (let [name, value] of Object.entries(fieldSettings)) {\n\t\t\tconst field = this.createSettingsField(uid, typeof value, name, value);\n\t\t\tsettingsDiv.appendChild(field);\n\t\t}\n\n\t\t// Footer\n\t\tconst footer = document.createElement(\"footer\");\n\t\tfooter.className = \"footer\";\n\t\tsettingsDiv.appendChild(footer);\n\n\t\t// Delete\n\t\tconst deleteBtn = document.createElement(\"button\");\n\t\tdeleteBtn.textContent = \"Delete\";\n\t\tdeleteBtn.className = \"btn small\";\n\t\tdeleteBtn.setAttribute(\"type\", \"button\");\n\t\tdeleteBtn.addEventListener(\n\t\t\t\"click\",\n\t\t\tthis.onDeleteFieldClick.bind(this, uid)\n\t\t);\n\t\tfooter.appendChild(deleteBtn);\n\t}\n\n\t// Events\n\t// =========================================================================\n\n\t// Events: Drag / Drop Binders\n\t// -------------------------------------------------------------------------\n\n\tbindDropZones () {\n\t\tconst dropZones = this.formWrap.querySelectorAll(\"[class*='formski-form-drop']\");\n\n\t\tfor (let i = 0, l = dropZones.length; i < l; ++i) {\n\t\t\tconst dropZone = dropZones[i];\n\n\t\t\tif (dropZone.dropBound === true)\n\t\t\t\tcontinue;\n\n\t\t\tdropZone.dropBound = true;\n\n\t\t\tconst type = ~dropZone.className.indexOf(\"-h\") ? \"h\" : \"v\";\n\n\t\t\tdropZone.addEventListener(\n\t\t\t\t\"dragover\",\n\t\t\t\tthis.onDropZoneDragOver.bind(this, dropZone)\n\t\t\t);\n\n\t\t\tdropZone.addEventListener(\n\t\t\t\t\"dragleave\",\n\t\t\t\tthis.onDropZoneDragLeave.bind(this, dropZone)\n\t\t\t);\n\n\t\t\tdropZone.addEventListener(\n\t\t\t\t\"drop\",\n\t\t\t\tthis.onDropZoneDrop.bind(this, dropZone, type)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Events: Drag / Drop Handlers\n\t// -------------------------------------------------------------------------\n\n\tonFieldTypeDrag = (field, e) => {\n\t\te.dataTransfer.setData(\"text/field\", field.dataset.type);\n\t};\n\n\tonDropZoneDragOver = (zone, e) => {\n\t\te.preventDefault();\n\n\t\tif (![...event.dataTransfer.types].includes(\"text/field\"))\n\t\t\treturn;\n\n\t\tzone.classList.add(\"drop\");\n\t};\n\n\tonDropZoneDragLeave = zone => {\n\t\tzone.classList.remove(\"drop\");\n\t};\n\n\tonDropZoneDrop = (zone, zoneType, e) => {\n\t\te.preventDefault();\n\t\tzone.classList.remove(\"drop\");\n\t\tconst type = e.dataTransfer.getData(\"text/field\");\n\n\t\tif (zoneType === \"h\") this.addFieldToForm(zone, type);\n\t\telse this.addFieldToRow(zone, type);\n\t};\n\n\t// Events: Click Binders\n\t// -------------------------------------------------------------------------\n\n\tbindClickEvents () {\n\t\tconst fields = this.formWrap.getElementsByClassName(\"formski-field\");\n\n\t\tfor (let i = 0, l = fields.length; i < l; ++i) {\n\t\t\tconst field = fields[i];\n\n\t\t\tif (field.clickBound === true)\n\t\t\t\tcontinue;\n\n\t\t\tfield.clickBound = true;\n\n\t\t\tfield.addEventListener(\"click\", this.onFieldClick.bind(this, field));\n\t\t}\n\t}\n\n\t// Events: Click Handlers\n\t// -------------------------------------------------------------------------\n\n\tonFieldClick = (field, e) => {\n\t\te.preventDefault();\n\t\tthis.editField(field);\n\t};\n\n\tonDeleteFieldClick = (uid, e) => {\n\t\te.preventDefault();\n\n\t\tif (confirm(\"Are you sure?\"))\n\t\t\tthis.deleteFieldByUid(uid);\n\t};\n\n\t// Helpers\n\t// =========================================================================\n\n\tgetRowTemplate () {\n\t\treturn document.importNode(\n\t\t\tthis.rowTemplate.content,\n\t\t\ttrue\n\t\t).firstElementChild;\n\t}\n\n\tgetFieldTemplate (type) {\n\t\treturn document.importNode(\n\t\t\tthis.fieldTemplates[type].content,\n\t\t\ttrue\n\t\t).firstElementChild;\n\t}\n\n\tgetDropZone (type) {\n\t\treturn document.importNode(\n\t\t\t(type === \"h\" ? this.dropZoneHTemplate : this.dropZoneVTemplate).content,\n\t\t\ttrue\n\t\t).firstElementChild;\n\t}\n\n\tgetUid (l = 5) {\n\t\tlet array = new Uint8Array(l);\n\t\tcrypto.getRandomValues(array);\n\t\tarray = array.map(x => Builder._uidChars.charCodeAt(x % Builder._uidCharsLength));\n\t\treturn String.fromCharCode.apply(null, array);\n\t}\n\n\tcreateSettingsField (uid, type, name, value) {\n\t\tconst labelId = \"label\" + this.getUid(10);\n\n\t\tconst field = document.createElement(\"div\");\n\t\tfield.classList.add(\"field\");\n\n\t\tconst heading = document.createElement(\"div\");\n\t\theading.classList.add(\"heading\");\n\t\tfield.appendChild(heading);\n\n\t\tconst label = document.createElement(\"label\");\n\t\tlabel.setAttribute(\"id\", labelId);\n\t\tlabel.textContent = this.capitalize(name);\n\t\theading.appendChild(label);\n\n\t\tconst input = document.createElement(\"div\");\n\t\tinput.classList.add(\"input\");\n\t\tfield.appendChild(input);\n\n\t\tconst inputName = `fieldSettings[${uid}][${name}]`;\n\n\t\tif (name === \"type\") {\n\t\t\tconst wrap = document.createElement(\"div\");\n\t\t\twrap.className = \"select\";\n\t\t\tinput.appendChild(wrap);\n\n\t\t\tconst f = document.createElement(\"select\");\n\t\t\tf.setAttribute(\"name\", inputName);\n\n\t\t\t[\n\t\t\t\t[\"text\", \"Text\"],\n\t\t\t\t[\"email\", \"Email\"],\n\t\t\t\t[\"tel\", \"Phone\"],\n\t\t\t\t[\"url\", \"URL\"],\n\t\t\t\t[\"date\", \"Date\"],\n\t\t\t\t[\"time\", \"Time\"],\n\t\t\t\t[\"datetime-local\", \"Date Time\"],\n\t\t\t].forEach(opt => {\n\t\t\t\tconst o = document.createElement(\"option\");\n\t\t\t\to.setAttribute(\"value\", opt[0]);\n\t\t\t\to.textContent = opt[1];\n\t\t\t\tf.appendChild(o);\n\t\t\t});\n\n\t\t\tf.value = value;\n\t\t\twrap.appendChild(f);\n\n\t\t\treturn field;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase \"boolean\":\n\t\t\t\tinput.textContent = \"TODO: Lightswitch\";\n\t\t\t\tbreak;\n\t\t\tcase \"object\":\n\t\t\t\tinput.textContent = \"TODO: Table\";\n\t\t\t\tbreak;\n\t\t\tdefault: {\n\t\t\t\tconst f = document.createElement(\"input\");\n\t\t\t\tf.className = \"text fullwidth\";\n\t\t\t\tf.setAttribute(\"type\", type === \"number\" ? \"number\" : \"text\");\n\t\t\t\tf.setAttribute(\"autocomplete\", \"off\");\n\t\t\t\tf.setAttribute(\"name\", inputName);\n\t\t\t\tf.value = value;\n\t\t\t\tinput.appendChild(f);\n\t\t\t}\n\t\t}\n\n\t\treturn field;\n\t}\n\n\tgetFriendlyTypeName (type) {\n\t\tswitch (type) {\n\t\t\tcase \"radio\":\n\t\t\t\treturn \"Radio Buttons\";\n\t\t\tcase \"textarea\":\n\t\t\t\treturn \"Text Area\";\n\t\t\tcase \"checkbox\":\n\t\t\t\treturn \"Checkboxes\";\n\t\t\tdefault:\n\t\t\t\treturn this.capitalize(type);\n\t\t}\n\t}\n\n\tcapitalize (str) {\n\t\treturn str[0].toUpperCase() + str.slice(1);\n\t}\n\n}\n\nwindow.FormskiBuilder = Builder;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;;;AAEA;AACA;AAEA;AACA;AAKA;AACA;AAKA;AACA;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAmTA;AACA;AACA;AArTA;AAuTA;AAEA;AAGA;AACA;AACA;AA9TA;AAgUA;AACA;AACA;AAlUA;AAoUA;AACA;AACA;AAEA;AAEA;AACA;AA3UA;AAkWA;AACA;AAAA;AACA;AACA;AArWA;AAuWA;AAEA;AAEA;AACA;AA3WA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAEA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAhBA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA7CA;AACA;AA8CA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAKA;AAKA;AAIA;AACA;AAGA;AACA;;;AA2BA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAGA;AACA;;;AAaA;AACA;AAEA;AACA;AAIA;;;AAEA;AACA;AAIA;;;AAEA;AACA;AAIA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAfA;AACA;AAiBA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AARA;AAUA;;;AAEA;AACA;AACA;;;;;;AAtfA;AACA;AADA;AACA;AAyfA;;;;A","sourceRoot":""}